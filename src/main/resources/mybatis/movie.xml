<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <!-- 번호(mno), 제목(title), 평점(score), 감독(director), 출연(actor), 개봉일(release),
 내용(plot), 가격(price), 파일(file1), 파일저장(file1saved), 썸네일(thumb1), 검색어(word), 파일크기(size2) -->

<mapper namespace="dev.mvc.movie.MovieDAOInter"> 
    <insert id="create" parameterType="dev.mvc.movie.MovieVO">
        INSERT INTO movie(mno, title, director, actor, plot, word, file1,
        						 file1saved, thumb1, size2, release, price, passwd)
        VALUES(movie_seq.nextval, #{title}, #{director}, #{actor}, #{plot}, #{word},
         		#{file1}, #{file1saved}, #{thumb1}, #{size2}, #{release}, #{price}, #{passwd})
    </insert>

  <!-- 
  레코드 갯수 만큼 MovieVO 객체를 만들어 ArrayList에 저장하여 리턴,
  List<MovieVO> list = new ArrayList<MovieVO>(); 
  -->
  <select id="list" resultType="dev.mvc.movie.MovieVO">
    SELECT mno, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd
     FROM movie 
    ORDER BY mno ASC
  </select>
  <select id="rank_price" resultType="dev.mvc.movie.MovieVO" 
             parameterType="HashMap">
    SELECT mno, categrp_no, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd, r
    FROM(
	    SELECT mno, categrp_no, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd, rownum as r
	    FROM(     
		    SELECT mno, categrp_no, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd
		    FROM movie
		    <choose>
		      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
		        WHERE categrp_no=#{categrp_no}
		      </when>
		      <otherwise> <!-- 검색하는 경우 -->
		        WHERE categrp_no=#{categrp_no} AND (title LIKE '%' || #{word} || '%' 
		                               OR plot LIKE '%' || #{word} || '%' 
		                               OR director LIKE '%' || #{word} || '%' 
		                               OR actor LIKE '%' || #{word} || '%' 
		                               OR word LIKE '%' || #{word} || '%')
		      </otherwise>
		    </choose>
		    ORDER BY price ASC  
		    )
		)
		WHERE <![CDATA[r >= #{start_num} AND r <= #{end_num}]]>
    </select>
  
  <!-- 조회, id: read, 입력: mno, 리턴: MovieVO -->
  <select id="read" resultType="dev.mvc.movie.MovieVO" parameterType="int">
    SELECT mno, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd
    FROM movie
    WHERE mno=#{mno}
  </select>
  
  <!-- 수정, id: update, 입력: MovieVO, 리턴: int -->
  <update id="update_text" parameterType="dev.mvc.movie.MovieVO">
    UPDATE movie
    SET title=#{title}, director=#{director}, actor=#{actor}, plot=#{plot}, price= #{price},
    	file1= #{file1}, file1saved= #{file1saved}, thumb1= #{thumb1}, word=#{word}, size2=#{size2}
    WHERE mno = #{mno}
  </update> 
  
  <update id="update_file" parameterType="dev.mvc.movie.MovieVO">
    UPDATE movie
    SET file1= #{file1}, file1saved= #{file1saved}, thumb1= #{thumb1}, size2=#{size2}
    WHERE mno = #{mno}
  </update>  
  
  <!-- 삭제 처리, id=delete, 입력: PK, 리턴: 삭제된 갯수 int -->
  <delete id="delete" parameterType="int">
    DELETE FROM movie
    WHERE mno= #{mno}
  </delete> 

    <select id="list_by_search" resultType="dev.mvc.movie.MovieVO" 
             parameterType="HashMap">
    SELECT mno, categrp_no, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd
    FROM movie
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE categrp_no=#{categrp_no}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE categrp_no=#{categrp_no} AND (title LIKE '%' || #{word} || '%' 
                               OR plot LIKE '%' || #{word} || '%' 
                               OR director LIKE '%' || #{word} || '%' 
                               OR actor LIKE '%' || #{word} || '%' 
                               OR word LIKE '%' || #{word} || '%')
      </otherwise>
    </choose>
    ORDER BY mno DESC   
  </select>


  <select id='search_count' resultType='int' parameterType='HashMap'>
  	SELECT COUNT(*) as cnt
  	FROM movie
  	<choose>
  	  <when test='word == null or word ==""'>
  	  WHERE categrp_no = #{categrp_no}
  	  </when>
  	  <otherwise>
  	  	WHERE categrp_no =#{categrp_no} AND (title LIKE '%'||#{word}||'%'
  	  							OR plot LIKE '%' ||#{word}||'%'
                               OR director LIKE '%' || #{word} || '%' 
                               OR actor LIKE '%' || #{word} || '%' 
                               OR word LIKE '%' || #{word} || '%')
  	  </otherwise>
  	</choose>
  </select>
  
  
  <select id="passwd_check" resultType='int' parameterType='HashMap'>
  SELECT COUNT(*) as cnt
  FROM movie
  WHERE mno = #{mno } AND passwd = #{passwd }
  </select>
  
    <select id="list_by_search_paging" resultType="dev.mvc.movie.MovieVO" 
             parameterType="HashMap">
    SELECT mno, categrp_no, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd, r
    FROM(
	    SELECT mno, categrp_no, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd, rownum as r
	    FROM(     
		    SELECT mno, categrp_no, title, director, actor, plot, word, file1,file1saved, thumb1, size2, release, price, passwd
		    FROM movie
		    <choose>
		      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
		        WHERE categrp_no=#{categrp_no}
		      </when>
		      <otherwise> <!-- 검색하는 경우 -->
		        WHERE categrp_no=#{categrp_no} AND (title LIKE '%' || #{word} || '%' 
		                               OR plot LIKE '%' || #{word} || '%' 
		                               OR director LIKE '%' || #{word} || '%' 
		                               OR actor LIKE '%' || #{word} || '%' 
		                               OR word LIKE '%' || #{word} || '%')
		      </otherwise>
		    </choose>
		    ORDER BY mno DESC  
		    )
		)
		WHERE <![CDATA[r >= #{start_num} AND r <= #{end_num}]]>
    </select>
  	<update id="update_score" parameterType="dev.mvc.movie.MovieVO">
  		UPDATE movie
  		SET score_cnt = score_cnt + 1, score_sum = score_sum + #{score_sum}, score = score_sum / score_cnt	
  		WHERE mno = #{mno}
  	</update>
  
  
</mapper> 


